name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    outputs:
      compile_status: ${{ steps.compile.outputs.compile_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle compile
        run: ./gradlew compileJava
        id: compile
        continue-on-error: true

      - name: Set compile status
        run: echo "::set-output name=compile_status::${{ job.status }}"

  test:
    needs: compile
    runs-on: ubuntu-latest
    outputs:
      test_status: ${{ steps.test.outputs.test_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Execute Gradle test
        run: ./gradlew test
        id: test
        continue-on-error: true

      - name: Set test status
        run: echo "::set-output name=test_status::${{ job.status }}"

  qodana:
    runs-on: ubuntu-latest
    outputs:
      qodana_status: ${{ steps.qodana.outputs.qodana_status }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: zulu

      - name: Qodana Scan
        id: qodana
        uses: JetBrains/qodana-action@v2023.2.6
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        continue-on-error: true

      - name: Set qodana status
        run: echo "::set-output name=qodana_status::${{ job.status }}"

  generate-badges:
    needs: [compile, test, qodana]
    runs-on: ubuntu-latest
    steps:
      - name: Generate badges
        id: badges
        run: |
          echo "::set-output name=compile_badge::https://img.shields.io/badge/Compile-${{ needs.compile.outputs.compile_status }}-brightgreen.svg?style=flat-square"
          echo "::set-output name=test_badge::https://img.shields.io/badge/Test-${{ needs.test.outputs.test_status }}-yellow.svg?style=flat-square"
          echo "::set-output name=qodana_badge::https://img.shields.io/badge/Qodana-${{ needs.qodana.outputs.qodana_status }}-orange.svg?style=flat-square"

  add-badges:
    needs: generate-badges
    runs-on: ubuntu-latest
    steps:
      - uses: wow-actions/add-badges@v1
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          badges: |
            {
              "Compile Status": "${{ needs.generate-badges.outputs.compile_badge }}",
              "Test Status": "${{ needs.generate-badges.outputs.test_badge }}",
              "Qodana Scan Status": "${{ needs.generate-badges.outputs.qodana_badge }}"
            }
