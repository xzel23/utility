name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-analyze:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 'Set up JDK 24'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '24'

      - name: 'Set up JDK 21'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: 'Cache Maven packages'
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: 'Setup Gradle'
        uses: gradle/actions/setup-gradle@v3

      - name: Start xvfb
        run: Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &

      - name: 'Execute Gradle build'
        run: ./gradlew build jacocoTestReport
        id: compile
        continue-on-error: false
        env:
          DISPLAY: ":99"

      - name: 'Upload test artifacts from all modules'
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts-${{ matrix.os }}
          path: |
            **/build/test-artifacts/**
          if-no-files-found: ignore

      - name: 'Cache SonarCloud packages'
        if: runner.os == 'Linux'
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: 'Sonar Scan'
        if: runner.os == 'Linux'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./gradlew sonar
          -Dsonar.projectKey=xzel23_utility
          -Dsonar.organization=xzel23
          -Dsonar.host.url=https://sonarcloud.io
          -Dsonar.coverage.jacoco.xmlReportPaths=**/build/reports/jacoco/test/jacocoTestReport.xml
