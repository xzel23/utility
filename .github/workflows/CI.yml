name: CI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up BellSoft Liberica Full JDK on Ubuntu
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://download.bell-sw.com/java/17.0.6+10/bellsoft-jdk17.0.6+10-linux-aarch64-full.deb
          sudo apt-get install -y ./bellsoft-jdk17.0.6+10-linux-aarch64-full.deb
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/bellsoft-java17-full-aarch64/bin/java 1
          sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/bellsoft-java17-full-aarch64/bin/javac 1

      - name: Set up BellSoft Liberica Full JDK on Windows
        if: runner.os == 'Windows'
        run: |
          curl -L -o bellsoft-jdk-17-windows-amd64-full.zip https://download.bell-sw.com/java/17.0.6+10/bellsoft-jdk17.0.6+10-windows-amd64-full.zip
          Expand-Archive -Path bellsoft-jdk-17-windows-amd64-full.zip -DestinationPath $env:ProgramFiles\BellSoft
          $env:Path += ";$env:ProgramFiles\BellSoft\jdk-17\bin"

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Execute Gradle build
        run: ./gradlew build
        id: compile
        continue-on-error: false

  qodana:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up BellSoft Liberica Full JDK
        run: |
          sudo apt-get update
          sudo apt-get install -y wget
          wget https://download.bell-sw.com/java/17.0.6+10/bellsoft-jdk17.0.6+10-linux-aarch64-full.deb
          sudo apt-get install -y ./bellsoft-jdk17.0.6+10-linux-aarch64-full.deb
          sudo update-alternatives --install /usr/bin/java java /usr/lib/jvm/bellsoft-java17-full-aarch64/bin/java 1
          sudo update-alternatives --install /usr/bin/javac javac /usr/lib/jvm/bellsoft-java17-full-aarch64/bin/javac 1

      - name: Qodana Scan
        id: qodana
        uses: JetBrains/qodana-action@v2023.3.2
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}
        continue-on-error: false