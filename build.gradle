plugins {
  id 'maven'
  id 'maven-publish'
  id 'java-library'
  id 'eclipse'
  id 'com.github.spotbugs' version '1.6.6'
  id 'com.jfrog.bintray' version '1.8.3'
  id 'com.dua3.gradle.jpms' version '0.5.1'
}

/////////////////////////////////////////////////////////////////////////////
	group              = 'com.dua3.utility'
	version            = '2.0-SNAPSHOT'
	
	ext.moduleName     = project.group 
	ext.scm            = 'https://gitlab.com/com.dua3.public/utility.git'
	ext.repo           = 'public'
	ext.description    = 'utilites and helper classes'
	
	ext.developerId    = 'xzel23'
	ext.developerName  = 'Axel Howind'
	ext.developerEmail = 'axel@dua3.com'
/////////////////////////////////////////////////////////////////////////////

repositories {
    jcenter()
}

// remove module-info.java from eclipse source folder
eclipse.classpath.file.whenMerged {
    for (item in entries.findAll{ it.path.matches('src/[^/]+/java') }) {
    	item.excludes += 'module-info.java'
    }
}

dependencies {
    // JUnit
    def junitVersion = '5.3.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
}

test {
    useJUnitPlatform()

    filter {
        exclude '**/module-info.class'
    }
}

javadoc {
    doFirst {
        options.addStringOption('-module-path', classpath.asPath)
    }
}

sourceCompatibility = 11
targetCompatibility = 11

// === BINTRAY === >

bintray {
    user = findProperty('BINTRAY_USER') ?: 'NONE'
    key = findProperty('BINTRAY_KEY') ?: 'NONE'

    configurations = ['archives']

    dryRun = false //[Default: false] Whether to run this as dry-run, without deploying
    publish = true //[Default: false] Whether version should be auto published after an upload    
    override = true //[Default: false] Whether to override version artifacts already published    

    pkg {
        repo = project.repo
        name = project.group
        userOrg = findProperty('BINTRAY_USER_ORG') ?: 'NONE'
        licenses = ['Apache-2.0']
        vcsUrl = project.scm

	    version {
	        name = project.version
	        desc = project.name+version
	        released  = new Date()
	        vcsTag = project.version
	    }
    }
}

// === ARTIFACTS === >

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
	archives jar
    archives sourcesJar
    archives javadocJar
}

// === MAVEN publication === >

// Create the pom configuration:
def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
        }
    }
    developers {
        developer {
            id    project.developerId
            name  project.developerName
            email project.developerEmail
        }
    }
    
    scm {
       url project.scm
    }
}

// Create the publication with the pom configuration:
publishing {
    publications {
        UtilityPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            groupId project.group
            artifactId project.name
            version version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', project.description)
                root.appendNode('name', project.group)
                root.appendNode('url', project.scm)
                root.children().last() + pomConfig
            }
        }
    }
}

// === SPOTBUGS === >

spotbugs.toolVersion = '3.1.9'

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
    // ignore failures until spotbugs bug is fixed: https://github.com/spotbugs/spotbugs/issues/756
    ignoreFailures = true
}

// === DEFAULT TASKS === >

defaultTasks 'build', 'publishToMavenLocal', 'install'
