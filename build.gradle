plugins {
  id "com.github.spotbugs" version "1.6.0"
}

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'java-library'
apply plugin: 'com.github.spotbugs'
apply plugin: 'jacoco'
apply plugin: 'eclipse'

// make JavaFX classes accessible in eclipse
import org.gradle.plugins.ide.eclipse.model.AccessRule
eclipse {
    classpath {
        file {
            whenMerged {
                def jre = entries.find { it.path.contains 'org.eclipse.jdt.launching.JRE_CONTAINER' }
                jre.accessRules.add(new AccessRule('0', 'javafx/**'))
            }
        }
    }
}

sourceCompatibility = 9
<<<<<<< HEAD
targetCompatibility = 1.8
=======
targetCompatibility = 9
>>>>>>> refs/remotes/origin/jdk9

group = 'com.dua3.utility'

repositories {
    mavenLocal()
    jcenter()
}

dependencies {
 	// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    def sl4jVersion = "1.7.25"
	compile "org.slf4j:slf4j-api:${sl4jVersion}"
	testRuntime "org.slf4j:slf4j-simple:${sl4jVersion}"

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

tasks.withType(com.github.spotbugs.SpotBugsTask) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

tasks.withType(JacocoReport) {
    reports {
        xml.enabled false
        csv.enabled false
        html.enabled true
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

defaultTasks 'build', 'publishToMavenLocal', 'install'
